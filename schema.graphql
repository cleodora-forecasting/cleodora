directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateEstimateInput is used for create Estimate object.
Input was generated by ent.
"""
input CreateEstimateInput {
  reason: String
  created: Time
  forecastID: ID
  probabilityIDs: [ID!]
}
"""
CreateForecastInput is used for create Forecast object.
Input was generated by ent.
"""
input CreateForecastInput {
  title: String!
  description: String
  created: Time
  resolves: Time!
  closes: Time
  resolution: ForecastResolution
  estimateIDs: [ID!]
}
"""
CreateOutcomeInput is used for create Outcome object.
Input was generated by ent.
"""
input CreateOutcomeInput {
  text: String!
  correct: Boolean
  probabilityIDs: [ID!]
}
"""
CreateProbabilityInput is used for create Probability object.
Input was generated by ent.
"""
input CreateProbabilityInput {
  value: Int!
  estimateID: ID
  outcomeID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Estimate implements Node {
  id: ID!
  reason: String!
  created: Time!
  forecast: Forecast
  probabilities: [Probability!]
}
type Forecast implements Node {
  id: ID!
  title: String!
  description: String!
  created: Time!
  resolves: Time!
  closes: Time
  resolution: ForecastResolution!
  estimates: [Estimate!]
}
"""ForecastResolution is enum for the field resolution"""
enum ForecastResolution @goModel(model: "github.com/cleodora-forecasting/cleodora/cleosrv/ent/forecast.Resolution") {
  UNRESOLVED
  RESOLVED
  NOT_APPLICABLE
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/cleodora-forecasting/cleodora/cleosrv/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
type Outcome implements Node {
  id: ID!
  text: String!
  correct: Boolean!
  probabilities: [Probability!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Probability implements Node {
  id: ID!
  value: Int!
  estimate: Estimate
  outcome: Outcome
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  estimates: [Estimate!]!
  forecasts: [Forecast!]!
  outcomes: [Outcome!]!
  probabilities: [Probability!]!
}
"""The builtin Time type"""
scalar Time
