// Code generated by ent, DO NOT EDIT.

package probability

const (
	// Label holds the string label denoting the probability type in the database.
	Label = "probability"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// EdgeEstimate holds the string denoting the estimate edge name in mutations.
	EdgeEstimate = "estimate"
	// EdgeOutcome holds the string denoting the outcome edge name in mutations.
	EdgeOutcome = "outcome"
	// Table holds the table name of the probability in the database.
	Table = "probabilities"
	// EstimateTable is the table that holds the estimate relation/edge.
	EstimateTable = "probabilities"
	// EstimateInverseTable is the table name for the Estimate entity.
	// It exists in this package in order to avoid circular dependency with the "estimate" package.
	EstimateInverseTable = "estimates"
	// EstimateColumn is the table column denoting the estimate relation/edge.
	EstimateColumn = "estimate_probabilities"
	// OutcomeTable is the table that holds the outcome relation/edge.
	OutcomeTable = "probabilities"
	// OutcomeInverseTable is the table name for the Outcome entity.
	// It exists in this package in order to avoid circular dependency with the "outcome" package.
	OutcomeInverseTable = "outcomes"
	// OutcomeColumn is the table column denoting the outcome relation/edge.
	OutcomeColumn = "outcome_probabilities"
)

// Columns holds all SQL columns for probability fields.
var Columns = []string{
	FieldID,
	FieldValue,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "probabilities"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"estimate_probabilities",
	"outcome_probabilities",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ValueValidator is a validator for the "value" field. It is called by the builders before save.
	ValueValidator func(int) error
)
