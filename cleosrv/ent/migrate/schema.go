// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EstimatesColumns holds the columns for the "estimates" table.
	EstimatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "reason", Type: field.TypeString, Default: ""},
		{Name: "created", Type: field.TypeTime},
		{Name: "forecast_estimates", Type: field.TypeInt, Nullable: true},
	}
	// EstimatesTable holds the schema information for the "estimates" table.
	EstimatesTable = &schema.Table{
		Name:       "estimates",
		Columns:    EstimatesColumns,
		PrimaryKey: []*schema.Column{EstimatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "estimates_forecasts_estimates",
				Columns:    []*schema.Column{EstimatesColumns[3]},
				RefColumns: []*schema.Column{ForecastsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ForecastsColumns holds the columns for the "forecasts" table.
	ForecastsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Default: ""},
		{Name: "created", Type: field.TypeTime},
		{Name: "resolves", Type: field.TypeTime},
		{Name: "closes", Type: field.TypeTime, Nullable: true},
		{Name: "resolution", Type: field.TypeEnum, Enums: []string{"UNRESOLVED", "RESOLVED", "NOT_APPLICABLE"}, Default: "UNRESOLVED"},
	}
	// ForecastsTable holds the schema information for the "forecasts" table.
	ForecastsTable = &schema.Table{
		Name:       "forecasts",
		Columns:    ForecastsColumns,
		PrimaryKey: []*schema.Column{ForecastsColumns[0]},
	}
	// OutcomesColumns holds the columns for the "outcomes" table.
	OutcomesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "correct", Type: field.TypeBool, Default: false},
	}
	// OutcomesTable holds the schema information for the "outcomes" table.
	OutcomesTable = &schema.Table{
		Name:       "outcomes",
		Columns:    OutcomesColumns,
		PrimaryKey: []*schema.Column{OutcomesColumns[0]},
	}
	// ProbabilitiesColumns holds the columns for the "probabilities" table.
	ProbabilitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "value", Type: field.TypeInt},
		{Name: "estimate_probabilities", Type: field.TypeInt, Nullable: true},
		{Name: "outcome_probabilities", Type: field.TypeInt, Nullable: true},
	}
	// ProbabilitiesTable holds the schema information for the "probabilities" table.
	ProbabilitiesTable = &schema.Table{
		Name:       "probabilities",
		Columns:    ProbabilitiesColumns,
		PrimaryKey: []*schema.Column{ProbabilitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "probabilities_estimates_probabilities",
				Columns:    []*schema.Column{ProbabilitiesColumns[2]},
				RefColumns: []*schema.Column{EstimatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "probabilities_outcomes_probabilities",
				Columns:    []*schema.Column{ProbabilitiesColumns[3]},
				RefColumns: []*schema.Column{OutcomesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EstimatesTable,
		ForecastsTable,
		OutcomesTable,
		ProbabilitiesTable,
	}
)

func init() {
	EstimatesTable.ForeignKeys[0].RefTable = ForecastsTable
	ProbabilitiesTable.ForeignKeys[0].RefTable = EstimatesTable
	ProbabilitiesTable.ForeignKeys[1].RefTable = OutcomesTable
}
