// Code generated by ent, DO NOT EDIT.

package outcome

const (
	// Label holds the string label denoting the outcome type in the database.
	Label = "outcome"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldText holds the string denoting the text field in the database.
	FieldText = "text"
	// FieldCorrect holds the string denoting the correct field in the database.
	FieldCorrect = "correct"
	// EdgeProbabilities holds the string denoting the probabilities edge name in mutations.
	EdgeProbabilities = "probabilities"
	// Table holds the table name of the outcome in the database.
	Table = "outcomes"
	// ProbabilitiesTable is the table that holds the probabilities relation/edge.
	ProbabilitiesTable = "probabilities"
	// ProbabilitiesInverseTable is the table name for the Probability entity.
	// It exists in this package in order to avoid circular dependency with the "probability" package.
	ProbabilitiesInverseTable = "probabilities"
	// ProbabilitiesColumn is the table column denoting the probabilities relation/edge.
	ProbabilitiesColumn = "outcome_probabilities"
)

// Columns holds all SQL columns for outcome fields.
var Columns = []string{
	FieldID,
	FieldText,
	FieldCorrect,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TextValidator is a validator for the "text" field. It is called by the builders before save.
	TextValidator func(string) error
	// DefaultCorrect holds the default value on creation for the "correct" field.
	DefaultCorrect bool
)
